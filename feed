<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Pyloons'Notes</title><link href="https://pyloons.github.io/" rel="alternate"></link><link href="https://pyloons.github.io/feed" rel="self"></link><id>https://pyloons.github.io/</id><updated>2017-10-06T20:55:00+08:00</updated><entry><title>慕课网Less基础教程学习笔记</title><link href="https://pyloons.github.io/%E6%85%95%E8%AF%BE%E7%BD%91less%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0.html" rel="alternate"></link><published>2017-10-06T20:55:00+08:00</published><updated>2017-10-06T20:55:00+08:00</updated><author><name>Pyloons</name></author><id>tag:pyloons.github.io,2017-10-06:/慕课网less基础教程学习笔记.html</id><summary type="html">&lt;p&gt;说真的学前端技术也是无奈；但是要拿出自己的产品，怎么能等着人家给你做好网页让你填？&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="koala" src="http://pyloons.pythonanywhere.com/media/images/koala.2e16d0ba.fill-800x450.jpg"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;less是一种可编译为css的文本文件，文件名为*.less，开头通常需要设置charset，常为“@charset utf-8”，其他部分与css类似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;编译less文件可以使用Node.js工具，也可以用浏览器工具；有一个简单的解决办法是使用国产开源软件Koala，该软件由oklai发布在GitHub上。由于几乎是一键安装并监听文件的实时编译，所以使用十分简便，对后端工程师开发网站前端是一种便利的工具。&lt;/p&gt;
&lt;h3&gt;1 语法基础&lt;/h3&gt;
&lt;p&gt;包括注释、变量、混合、匹配、运算、嵌套、@arguments变量、避免编译等。&lt;/p&gt;
&lt;h4&gt;1.1 注释&lt;/h4&gt;
&lt;p&gt;有&lt;code&gt;/**/&lt;/code&gt;和&lt;code&gt;//&lt;/code&gt;两种，前一种会在编译后的CSS文件中保留，后一种不会。&lt;/p&gt;
&lt;h4&gt;1.2 变量&lt;/h4&gt;
&lt;p&gt;格式为&lt;code&gt;@变量名:变量值;&lt;/code&gt;，定义完成后，可以在less文件中对对象属性进行赋值。例如：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;@test_width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;300px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;test_width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;test_width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;1.3  混合&lt;/h4&gt;
&lt;p&gt;代码举例：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;box&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;test_width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;test_width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;.border&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;border&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;pink&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;box2&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;.box&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;margin-left&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;混合的方法还可以带参数，作为带参混合方法，如果没有被调用，默认是不会被直接编译在CSS里的：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;border_02&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@border_width&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;pink&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;border_width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;test_mixin&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;.border_02(30px)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;混合方法带参数，还可以带默认值:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;border_03&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@border_width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;10px&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="err"&gt;//这里有默认值&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;green&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;border_width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;test_mixin_03&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;.border_03()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;//如果没有带默认值，这样写，是要报错的&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;另外在处理浏览器兼容性问题上，用带默认值的带参混合，是可以很方便书写的。&lt;/p&gt;
&lt;h4&gt;1.4 匹配&lt;/h4&gt;
&lt;p&gt;与其他编程语言中的条件判断十分接近，但又有所不同。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt; 1&lt;/span&gt;
&lt;span class="code-line"&gt; 2&lt;/span&gt;
&lt;span class="code-line"&gt; 3&lt;/span&gt;
&lt;span class="code-line"&gt; 4&lt;/span&gt;
&lt;span class="code-line"&gt; 5&lt;/span&gt;
&lt;span class="code-line"&gt; 6&lt;/span&gt;
&lt;span class="code-line"&gt; 7&lt;/span&gt;
&lt;span class="code-line"&gt; 8&lt;/span&gt;
&lt;span class="code-line"&gt; 9&lt;/span&gt;
&lt;span class="code-line"&gt;10&lt;/span&gt;
&lt;span class="code-line"&gt;11&lt;/span&gt;
&lt;span class="code-line"&gt;12&lt;/span&gt;
&lt;span class="code-line"&gt;13&lt;/span&gt;
&lt;span class="code-line"&gt;14&lt;/span&gt;
&lt;span class="code-line"&gt;15&lt;/span&gt;
&lt;span class="code-line"&gt;16&lt;/span&gt;
&lt;span class="code-line"&gt;17&lt;/span&gt;
&lt;span class="code-line"&gt;18&lt;/span&gt;
&lt;span class="code-line"&gt;19&lt;/span&gt;
&lt;span class="code-line"&gt;20&lt;/span&gt;
&lt;span class="code-line"&gt;21&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;triangle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;top&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;5px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;ccc&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;dashed&lt;/span&gt; &lt;span class="kc"&gt;dashed&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;dashed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;triangle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nt"&gt;bottom&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;5px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;ccc&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border-width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border-color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt; &lt;span class="kc"&gt;transparent&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border-style&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;dashed&lt;/span&gt; &lt;span class="kc"&gt;dashed&lt;/span&gt; &lt;span class="kc"&gt;dashed&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;triangle&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@_&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;5px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="p"&gt;#&lt;/span&gt;&lt;span class="nn"&gt;ccc&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;overflow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;hidden&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;sanjiao&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;.triangle(bottom,&lt;/span&gt; &lt;span class="err"&gt;100px)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;上面是匹配的一种写法，用于多个匹配中共同代码的统一一次性书写。匹配的核心原则是，你填的关键参数是是什么，就会编译成相对应那一条less语句的css样式。&lt;/p&gt;
&lt;h4&gt;1.5 运算&lt;/h4&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;@test_01&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;300px&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;box_02&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;width&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="err"&gt;(@test_01&lt;/span&gt; &lt;span class="err"&gt;-&lt;/span&gt; &lt;span class="err"&gt;20)&lt;/span&gt; &lt;span class="err"&gt;*&lt;/span&gt; &lt;span class="err"&gt;5&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mh"&gt;#ccc&lt;/span&gt; &lt;span class="mi"&gt;-10&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;这个比较简单易懂。&lt;/p&gt;
&lt;h4&gt;1.6 嵌套&lt;/h4&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/span&gt;
&lt;span class="code-line"&gt;9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;list&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;li&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;height&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;100&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;嵌套也只是一种简易写法，还是要根据实际情况来写。还有一种CSS事件的写法：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;float&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;left&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;//&lt;/span&gt; &lt;span class="err"&gt;&amp;amp;&lt;/span&gt; &lt;span class="err"&gt;代表上一层选择器&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;&amp;amp;:hover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;color&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;red&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;这个真的是造福后端狗啊。&lt;/p&gt;
&lt;h4&gt;1.7 @arguments变量&lt;/h4&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;border_arg&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;@w&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;30px&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@c&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;red&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nv"&gt;@xx&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nd"&gt;solid&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;@&lt;/span&gt;&lt;span class="n"&gt;arguments&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;test_argu&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="err"&gt;.border_arg()&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;另外在混合使用某个类的时候，需要修改某个参数，直接改就行了，less足够智能去识别。&lt;/p&gt;
&lt;h4&gt;1.8 其他&lt;/h4&gt;
&lt;h5&gt;1.8.1 避免编译&lt;/h5&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;~&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;calc(300px - 30px)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;这样在编译的时候就直接输出为&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nc"&gt;test&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;  &lt;span class="k"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;calc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h5&gt;1.8.2 !important&lt;/h5&gt;
&lt;p&gt;直接在混合后面加上该语句即可，可以自动全加上!important。&lt;/p&gt;</content><category term="Less"></category><category term="CSS"></category></entry><entry><title>《Python Web开发 测试驱动方法》基础篇带给我的思考</title><link href="https://pyloons.github.io/%E3%80%8Apython-web%E5%BC%80%E5%8F%91-%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E6%96%B9%E6%B3%95%E3%80%8B%E5%9F%BA%E7%A1%80%E7%AF%87%E5%B8%A6%E7%BB%99%E6%88%91%E7%9A%84%E6%80%9D%E8%80%83.html" rel="alternate"></link><published>2017-10-05T23:29:00+08:00</published><updated>2017-10-05T23:29:00+08:00</updated><author><name>Pyloons</name></author><id>tag:pyloons.github.io,2017-10-05:/《python-web开发-测试驱动方法》基础篇带给我的思考.html</id><summary type="html">&lt;p&gt;TDD对于一个没有接触过它的开发者来说，思路太过清奇，让人难以适应；另一方面，这却是许多前辈所说的“分解大问题，解决小问题”的最不费脑子的方法。&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;img alt="goat" src="http://pyloons.pythonanywhere.com/media/images/goat-2632143_960_720.2e16d0ba.fill-800x450.jpg"&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码构建过程太过于繁复，我来记录一下心得体会好了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;​        从第一行代码开始，作者就开始了令我费解的繁复的测试，但我明白TDD确实是一种重要的开发技能，所以还是强忍着别扭敲了一遍书上的代码。&lt;/p&gt;
&lt;h3&gt;TDD的最核心的流程&lt;/h3&gt;
&lt;p&gt;​        在书上可以找到一个流程图，很好地说明了TDD究竟是一个什么样的开发流程。既然是测试推着开发走，那么开局最重要的自然是写测试。书中是从最简单的网页标题开始写的。&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/span&gt;
&lt;span class="code-line"&gt;5&lt;/span&gt;
&lt;span class="code-line"&gt;6&lt;/span&gt;
&lt;span class="code-line"&gt;7&lt;/span&gt;
&lt;span class="code-line"&gt;8&lt;/span&gt;
&lt;span class="code-line"&gt;9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!python&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;selenium&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;browser&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="n"&gt;webdriver&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Firefox&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# 原书在这里挖了一个坑，火狐浏览器需要geckodriver才能启动&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;http://localhost:8000&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Django&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;browser&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;​        以及后文中类似的测试数不胜数。靠着这个，一步一步稳稳地开发出了清单应用的最小可用版本。&lt;/p&gt;
&lt;p&gt;​        写好了测试，自然就要运行它，一般情况下初次运行测试，得到的只有错误；请适应错误带来的打击，然后去解决这个错误。比如上面一段测试代码，如果写成一个Python脚本去运行，必然带来错误——毕竟连Django都没有安装，开发服务器也没有运行，怎么也不可能是对的。但是正如书本标题所说，测试驱动开发；现在测试出了问题，你必须用开发来解决这个问题，让测试不再出问题。&lt;/p&gt;
&lt;p&gt;​        这里必须说明的是，不是说测试出了问题，你就要大篇幅地写代码，完成这个功能——恰恰相反，你必须只写最小的代码，目的仅仅是让测试通过。你得忘记自己曾经是个什么样的开发者才行。于是在后文就有了类似于以下这样的代码：&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;1&lt;/span&gt;
&lt;span class="code-line"&gt;2&lt;/span&gt;
&lt;span class="code-line"&gt;3&lt;/span&gt;
&lt;span class="code-line"&gt;4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="code-line"&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!python&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="c1"&gt;# lists/views.py&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;home_page&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;/span&gt;
&lt;span class="code-line"&gt;    &lt;span class="k"&gt;pass&lt;/span&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;​        什么都不做，就问你怕不怕！&lt;/p&gt;
&lt;p&gt;​        当然并不是真的什么都不做，尽管这种无意义的代码确实能通过之前那个测试报错，但是它必然会带来其他的问题，或者在另一个测试中引起问题——解决它是迟早要做的事，不要因为这个小瑕疵破坏了TDD帅气的姿势。&lt;/p&gt;
&lt;p&gt;​        再然后，如果测试全都通过了呢？单元测试无误，你还可以看看代码是不是可以优化呀？代码优化之后，是不是又报错了咯？如果不再报错，那功能测试是不是没问题咯？如果功能测试也没问题了，你是不是还要开发新功能或者强化现有功能咯？&lt;/p&gt;
&lt;p&gt;​        所以，测试推动开发进程，是一个无穷无尽的循环；如果把用户需求转化为功能测试，这个过程。它的技术并不复杂，挑战的是耐心和恒心。&lt;/p&gt;
&lt;h3&gt;现在是名词解释时间&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;用户故事 &lt;/strong&gt; 从用户的角度描述应用如何运行，来组织功能测试。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;功能测试  &lt;/strong&gt;从应用外部观察应用的运行，有很多名字，国内更喜欢用黑箱测试这个说法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;预期失败&lt;/strong&gt;  意料之中的失败。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;意外失败  &lt;/strong&gt;测试在意料之外失败，通常认为是测试中有错误或者出现了一个回归引起的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;回归  &lt;/strong&gt;新添加的代码破坏了原本正常的功能；一般这种情况需要重构旧的代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;其他收获&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;反复向本地git仓库提交代码，现在感觉git熟练度上升不少。&lt;/li&gt;
&lt;li&gt;为视图编写单元测试的基本三步：创建需要的对象实例、把这个实例提交给处理它的视图函数（或视图类）、使用断言测试处理结果。&lt;/li&gt;
&lt;li&gt;三角法——如果通过作弊手段就能通过测试，那就再写一个符合需求但不符合作弊手段的测试，让测试失败，强迫自己些更好的代码。&lt;/li&gt;
&lt;li&gt;事不过三，三则重构——如果一段代码让自己反复粘贴达三次，那么它需要重构，成为一个独立的模块&lt;/li&gt;
&lt;li&gt;待办事项清单可以很好的记录你的灵感和客户的需求，尽量都写在清单上比较好。&lt;/li&gt;
&lt;li&gt;测试隔离会更酷。&lt;/li&gt;
&lt;li&gt;不要编写多余的代码，尽管你觉得这些代码可能有用，但是不要写，因为YAGNI——You ain't gonna need it。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;结尾说明&lt;/h3&gt;
&lt;p&gt;​        并不觉得自己学懂了多少，毕竟思路与自己的习惯差距太大。不过TDD方法确实有它的独到之处，这本书还是要多看几遍才能掌握。&lt;/p&gt;</content><category term="Django"></category><category term="TDD"></category></entry></feed>